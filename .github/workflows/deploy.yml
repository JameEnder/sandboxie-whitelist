name: Deploy Release Binary

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Trigger on semantic version tags like v1.0.0, 1.0.0, 2.3.4 etc.

permissions:
  contents: write # Needed to create releases and upload assets

jobs:
  build-and-upload:
    name: Build and Upload Windows Binary
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Prepare asset path for release
        id: prepare_asset # Give this step an ID to reference its output if needed elsewhere
        shell: pwsh
        run: |
          $binaryName = "sandboxie-whitelist"
          $sourcePath = "target/${{ matrix.target }}/release/$binaryName.exe"
          $assetName = "$binaryName-${{ env.VERSION }}-${{ matrix.target }}.exe"

          # Check if the binary exists
          if (-not (Test-Path $sourcePath)) {
            Write-Error "Binary not found at $sourcePath"
            exit 1
          }

          # Format for softprops/action-gh-release: "path/to/local/file=asset-name-on-release.ext"
          # If you don't want to rename, just use the $sourcePath
          $assetInfo = "$sourcePath=$assetName"
          # $assetInfo = $sourcePath # Use this line instead if you want the asset name to be just "sandboxie-whitelist.exe"

          echo "ASSET_INFO=$assetInfo" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Asset path and name prepared: $assetInfo"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET_INFO }}
          fail_on_unmatched_files: true
