name: Deploy Release Binary

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and Upload Windows Binary
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Prepare asset path for release
        id: prepare_asset
        shell: pwsh
        run: |
          $binaryName = "sandboxie-whitelist"
          $relativeSourcePath = "target/${{ matrix.target }}/release/$binaryName.exe"
          # --- We will NOT use the renaming syntax for this test ---
          # $assetName = "$binaryName-${{ env.VERSION }}-${{ matrix.target }}.exe"
          # $assetInfo = "$relativeSourcePath=$assetName"

          Write-Host "Current Directory (PWD): $(Get-Location)"
          Write-Host "Checking for binary at relative path: $relativeSourcePath"
          if (-not (Test-Path $relativeSourcePath -PathType Leaf)) {
            Write-Error "FATAL: Binary file not found at relative path '$relativeSourcePath'."
            exit 1
          }
          Write-Host "Binary found at relative path!"

          # Set ASSET_INFO to JUST the relative path
          $assetInfo = $relativeSourcePath

          echo "ASSET_INFO=$assetInfo" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Asset info for release step (no renaming): $assetInfo"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # Pass only the relative path now
          files: ${{ env.ASSET_INFO }}
          fail_on_unmatched_files: true

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # Pass the string like "target/x86_64-pc-windows-gnu/release/sandboxie-whitelist.exe=sandboxie-whitelist-0.1.0-x86_64-pc-windows-gnu.exe"
          files: ${{ env.ASSET_INFO }}
          fail_on_unmatched_files: true
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET_INFO }} # Use the prepared path/name combo
          fail_on_unmatched_files: true
